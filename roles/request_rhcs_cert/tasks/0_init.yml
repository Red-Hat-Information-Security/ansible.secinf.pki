---
- name: Request | Install Required Packages
  ansible.builtin.package:
    name: pki-tools
    state: present
  delegate_to: "{{ rhcs_pki_execution_host }}"

- name: Request | Create pki password
  ansible.builtin.template:
    src: 'pki.password.j2'
    dest: '~/.pki.password'
    mode: '0600'
  become: no
  delegate_to: "{{ rhcs_pki_execution_host }}"

- name: Request | Initialize PKI client
  ansible.builtin.command:
    cmd: pki -C ~/.pki.password client-init
    creates: ~/.dogtag/nssdb/
  delegate_to: "{{ rhcs_pki_execution_host }}"

- name: Request | Download CA cert
  ansible.builtin.get_url:
    url: "{{ rhcs_pki_ca_cert_url }}"
    dest: ~/pki_rhcs_ca_cert.pem
    mode: '0644'
  delegate_to: "{{ rhcs_pki_execution_host }}"

- name: Request | Import CA cert and set trust
  ansible.builtin.command:
    cmd: >-
      pki -C ~/.pki.password client-cert-import
      RHCS-CA-CERT
      --cert ~/pki_rhcs_ca_cert.pem
      --trust CT,C,C
  changed_when: false
  delegate_to: "{{ rhcs_pki_execution_host }}"

- name: Request | Pull certificate management repo
  ansible.builtin.git:
    repo: "{{ gitlab_base_url }}/{{ rhcs_certificate_management_repo }}"
    dest: "{{ rhcs_certificate_management_repo_name }}"
    update: yes
  delegate_to: localhost
  become: no
  run_once: true
  no_log: "{{ _not_log_sensitive | default('yes') }}"

- name: Request | Slurp CSR
  ansible.builtin.command:
    cmd: "cat {{ rhcs_certificate_management_repo_name }}/{{ inventory_hostname }}/csr"
  register: _csr_request
  changed_when: false
  delegate_to: localhost
  become: no

- name: Create XML Request File
  ansible.builtin.tempfile:
    state: file
  register: _ca_server_cert_file
  become: no
  delegate_to: "{{ rhcs_pki_execution_host }}"

- name: Request | Generate RHCS
  ansible.builtin.template:
    src: 'caServerCert.xml.j2'
    dest: "{{ _ca_server_cert_file.path }}"
    mode: '0600'
  become: no
  delegate_to: "{{ rhcs_pki_execution_host }}"

- name: PKI Request Block
  block:
    - name: Request | Submit to RHCS
      ansible.builtin.command:
        cmd: >-
          pki
          -C ~/.pki.password
          -U "{{ rhcs_pki_certificate_url }}"
          ca-cert-request-submit {{ _ca_server_cert_file.path }}
      register: _request_output
      changed_when: true
      become: no
      throttle: 1
      delegate_to: "{{ rhcs_pki_execution_host }}"

    - name: Request | Wait for certificate approval
      ansible.builtin.command:
        cmd: >-
          pki
          -C ~/.pki.password
          -U "{{ rhcs_pki_certificate_url }}"
          ca-cert-request-show {{ _request_number }}
      register: _request_stat
      until: _request_stat.stdout is search('Certificate ID')
      delay: 600
      retries: 144
      changed_when: true
      become: no
      throttle: 1
      delegate_to: "{{ rhcs_pki_execution_host }}"

    - name: Retrieve | Certificate
      ansible.builtin.command:
        cmd: >-
          pki
          -C ~/.pki.password
          -U "{{ rhcs_pki_certificate_url }}"
          ca-cert-export {{ _serial_id }}
      register: _retrieved_cert
      changed_when: false
      become: no
      throttle: 1
      delegate_to: "{{ rhcs_pki_execution_host }}"
  always:
    - name: Delete XML Request File
      ansible.builtin.file:
        path: "{{ _ca_server_cert_file.path }}"
        state: absent
      when: _ca_server_cert_file.path is defined
      delegate_to: "{{ rhcs_pki_execution_host }}"

- name: Retrieve | Pull any repo changes
  ansible.builtin.git:
    repo: "{{ gitlab_base_url }}/{{ rhcs_certificate_management_repo }}"
    dest: "{{ rhcs_certificate_management_repo_name }}"
    update: yes
  delegate_to: localhost
  become: no
  run_once: true
  no_log: "{{ _not_log_sensitive | default('yes') }}"

- name: Retrieve | Export request ID to repository
  ansible.builtin.copy:
    content: "{{ _request_number }}"
    dest: "{{ rhcs_certificate_management_repo_name }}/{{ inventory_hostname }}/request_id"
    mode: '0644'
  delegate_to: localhost
  become: no

- name: Retrieve | Export certificate ID to repository
  ansible.builtin.copy:
    content: "{{ _serial_id }}"
    dest: "{{ rhcs_certificate_management_repo_name }}/{{ inventory_hostname }}/serial_id"
    mode: '0644'
  delegate_to: localhost
  become: no

- name: Retrieve | Export certificate creation time to repository
  ansible.builtin.copy:
    content: "{{ lookup('pipe', 'date +%Y%m%dT%H%M%S') }}"
    dest: "{{ rhcs_certificate_management_repo_name }}/{{ inventory_hostname }}/creation_timestamp"
    mode: '0644'
  delegate_to: localhost
  become: no

- name: Retrieve | Export certificate to repository
  ansible.builtin.copy:
    content: "{{ _retrieved_cert.stdout }}"
    dest: "{{ rhcs_certificate_management_repo_name }}/{{ inventory_hostname }}/certificate"
    mode: '0644'
  delegate_to: localhost
  become: no

- name: CSR | Push changes to certificate management repo
  secinf.utils.git_acp:
    mode: 'https'
    user: "{{ gitlab_api_creds.user }}"
    token: "{{ gitlab_api_creds.pass }}"
    path: "{{ rhcs_certificate_management_repo_name }}"
    url: "https://gitlab.cee.redhat.com/{{ rhcs_certificate_management_repo }}"
    user_name: "{{ gitlab_api_creds.user }}"
    user_email: 'no-reply@aap.infosec.redhat.com'
    comment: "Certificate: {{ inventory_hostname }} {{ lookup('pipe', 'date +%Y%m%dT%H%M%S') }}"
  delegate_to: localhost
  run_once: true
  become: no

...
